% ################################
% Cell segmentation, preliminary
% ################################
% Read a color image
% ==================
im1 = double(imread('C9minpeps2.bmp'));
figure(1), imshow(im1/255);
title('Original color image');
% Look at the three colour components RGB
% =======================================
im1r=im1(:,:,1); im1g=im1(:,:,2); im1b=im1(:,:,3);
im1bSmall = im1(200:800,200:800,3);
figure(2), imagesc(im1r,[0 255]), axis image, colormap(gray), colorbar;
title('Red image');
figure(3), imagesc(im1g,[0 255]), axis image, colormap(gray), colorbar;
title('Green image');
figure(4), imagesc(im1b,[0 255]), axis image, colormap(gray), colorbar;
title('Blue image');
% Compute histogram of central part of the blue image
% ===================================================
histo = hist(im1bSmall(:),[0:255]);
tresh_T = mid_way(histo, 70);
figure(5), stem(histo);

% Perform thresholding
% ====================
im1bT = im1b > tresh_T; %42;
figure(6), imagesc(im1bT), axis image, colormap(gray), colorbar;
title('After thresholding');
% Perform opening
% ===============
SE4 = [0 1 0;
1 1 1;
0 1 0];
SE8 = [1 1 1;
1 1 1;
1 1 1];

tmp = im1bT;
tmp = bwareaopen(tmp, 5);

tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);
tmp = imdilate(tmp,SE4);

tmp = imerode(tmp,SE4);
tmp= imdilate(tmp,SE4);
tmp= imerode(tmp,SE4);
tmp= imdilate(tmp,SE4);

tmp= imerode(tmp,SE4);
tmp= imerode(tmp,SE4);
tmp= imerode(tmp,SE4);

tmp = imfill(tmp, 'holes');
im1bTmorph  = tmp;
figure(7), imagesc(im1bTmorph), axis image, colormap(gray), colorbar;
title('After morphological processing');

% Compute the distance transform within the cells
% ===============================================
bw = im1bTmorph;
D = bwdist(~bw);
figure(8), imagesc(bw); axis image, colormap(jet), colorbar;
title('Distance transform of  Ìƒ bw');
colormap(jet), colorbar;
% Multiply the distance transform with -1
% and set pixels outside to the min-value.
% This is the desired landscape.
% ========================================
Dinv = -D;
Dinv(~bw) = min(min(Dinv));
figure(9), imagesc(Dinv), axis image, colormap(jet), colorbar;
title('Landscape 1');
colormap(jet), colorbar;

figure(10)
localMin = imhmin(Dinv, 1);
localMin_watershed=watershed(localMin);
imagesc(localMin_watershed);
axis image;
colormap(jet);
colorbar;
title('Local minima');

figure(11)
waterholes = localMin_watershed>1;
waterholes(10,10)=1;
imagesc(waterholes,[0 1]);
axis image;
colormap(gray);
colorbar;

figure(12)
D2 = bwdist(-bw);
D2 = D2 .* (D2<=100);
imagesc(D2,[0 100]);
axis image;
colormap(jet);
colorbar;
title('segmentation');

figure(13)
CC=bwconncomp(waterholes,8);
imagesc(watershed_meyer(D2,8,CC)==6);
title('Watershed meyer')
colormap(jet), colorbar

image = watershed_meyer(D2,8,CC);
Overlay(image);
%% 3.4

sobelx = [1 0 -1; 2 0 -2; 1 0 -1]/8;
sobely = [-1 -2 -1; 0 0 0; 1 2 1]/8;

matrix1 = conv2(-sobelx,sobelx,'full');
matrix2 = conv2(-sobely,sobely,'full');
matrix = (matrix1 + matrix2);

imlaplace=conv2(im1r, matrix, 'same');

figure(1)
imagesc(im1r,[0 255]), axis image, colormap(gray), colorbar;
title('Red image');

figure(2)
imagesc(imlaplace), axis image, colormap(gray), colorbar;
title('Laplace image');

imlaplaceT = imlaplace > 8;
figure(3), imagesc(imlaplaceT), axis image, colormap(gray), colorbar;
title('After thresholding');

imageMult = imlaplace .* imlaplaceT;

figure(4)
imagesc(imageMult), axis image, colormap(gray), colorbar;
title('Laplace*Red image');

figure(5)
IM=imregionalmax(imageMult);
imagesc((IM)), axis image, colormap(gray), colorbar;
title('imregionalmax');
%%
IM = double(IM);
im1 = double(imread('C9minpeps2.bmp'));
figure(1), imshow(im1/255);

image_dot_region = (watershed_meyer(D2,8,CC)==6);
figure(2), imshow(image_dot_region);

circle = [0 0 0 0 1 1 0 0 0 0;
          0 0 1 1 1 1 1 1 0 0;
          0 1 1 0 0 0 0 1 1 0;
          0 1 0 0 0 0 0 0 1 0;
          1 1 0 0 0 0 0 0 1 1;
          1 1 0 0 0 0 0 0 1 1;
          0 1 0 0 0 0 0 0 1 0;
          0 1 1 0 0 0 0 1 1 0;
          0 0 1 1 1 1 1 1 0 0;
          0 0 0 0 1 1 0 0 0 0];

im1r=im1(:,:,1); im1g=im1(:,:,2); im1b=im1(:,:,3);
imcircles = zeros(1000,1000);

for i=1:1000
    for j=1:1000
        if(IM(i,j) == 1 && in_dot_region(i,j) == 1)
            if(i < 995 &&  i > 5 && j > 5 && j < 995)
                imcircles(i-5:i+4,j-5:j+4) = circle;
            end
        end
    end
end

im2 = zeros(1000,1000,3);
im2(:,:,1) = (imcircles==1) .* 0 + (imcircles==0) .* im1r;
im2(:,:,2) = (imcircles==1) .* 255 + (imcircles==0) .* im1g;
im2(:,:,3) = (imcircles==1) .* 255 + (imcircles==0) .* im1b;

figure(3)
imshow(im2/255), axis image, colormap(jet), colorbar;
title('imregionalmax');

sum(sum(IM))